Experiment - 3 (2)

(main.jsx)

.app-container {
  max-width: 700px;
  margin: 20px auto;
  padding: 20px;
  border: 2px solid #000;
  border-radius: 6px;
  background-color: #fff;
  font-family: Arial, sans-serif;
}

h1 {
  font-size: 24px;
  font-weight: bold;
  margin-bottom: 15px;
}

.search-box,
.add-form {
  margin-bottom: 15px;
}

.search-box input,
.add-form input {
  padding: 8px;
  margin-right: 8px;
  border: 1px solid #aaa;
  border-radius: 4px;
}

.add-form button {
  padding: 8px 12px;
  border: 1px solid #aaa;
  background-color: #f5f5f5;
  cursor: pointer;
  border-radius: 4px;
}

.add-form button:hover {
  background-color: #e0e0e0;
}

.book-list {
  list-style-type: none;
  padding: 0;
}

.book-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px;
  margin-bottom: 8px;
  border: 1px solid #ddd;
  border-radius: 6px;
}

.book-title {
  font-weight: bold;
}

.remove-btn {
  padding: 6px 10px;
  border: 1px solid #aaa;
  background-color: #f8f8f8;
  cursor: pointer;
  border-radius: 4px;
}

.remove-btn:hover {
  background-color: #f0f0f0;
}




(App.jsx)


import React, { useState } from "react";
import "./App.css";

function App() {
  const [books, setBooks] = useState([
    { title: "1984", author: "George Orwell" },
    { title: "The Great Gatsby", author: "F. Scott Fitzgerald" },
    { title: "To Kill a Mockingbird", author: "Harper Lee" },
  ]);

  const [searchTerm, setSearchTerm] = useState("");
  const [newTitle, setNewTitle] = useState("");
  const [newAuthor, setNewAuthor] = useState("");

  const handleAddBook = () => {
    if (newTitle.trim() && newAuthor.trim()) {
      setBooks([...books, { title: newTitle, author: newAuthor }]);
      setNewTitle("");
      setNewAuthor("");
    }
  };

  const handleRemoveBook = (index) => {
    setBooks(books.filter((_, i) => i !== index));
  };

  const filteredBooks = books.filter(
    (book) =>
      book.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
      book.author.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="app-container">
      <h1>Library Management</h1>

      {/* Search */}
      <div className="search-box">
        <input
          type="text"
          placeholder="Search by title or author"
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
        />
      </div>

      {/* Add Book */}
      <div className="add-form">
        <input
          type="text"
          placeholder="New book title"
          value={newTitle}
          onChange={(e) => setNewTitle(e.target.value)}
        />
        <input
          type="text"
          placeholder="New book author"
          value={newAuthor}
          onChange={(e) => setNewAuthor(e.target.value)}
        />
        <button onClick={handleAddBook}>Add Book</button>
      </div>

      {/* Book List */}
      <ul className="book-list">
        {filteredBooks.map((book, index) => (
          <li key={index} className="book-item">
            <span>
              <span className="book-title">{book.title}</span> by {book.author}
            </span>
            <button className="remove-btn" onClick={() => handleRemoveBook(index)}>
              Remove
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;


(Index.css)

body {
  margin: 0;
  padding: 0;
  background-color: #fafafa;
}



(main.jsx)

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App";
import "./index.css";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

